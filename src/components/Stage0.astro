---
import { kanaDictionary } from '../data/kanaDic.js'

const showGroupRows = (whichKana, showAlternatives, showSimilars = false) => {
	const thisKana = kanaDictionary[whichKana]
	let rows = []
	Object.keys(thisKana).forEach((groupName, idx) => {
		// if(groupName == "h_group11_a" || groupName == "k_group13_a")
		//   rows.push(this.alternativeToggleRow(whichKana, "_a", showAlternatives));
		// if(groupName == "k_group11_s")
		//   rows.push(this.alternativeToggleRow(whichKana, "_s", showSimilars));

		if (
			(!groupName.endsWith('a') || showAlternatives) &&
			(!groupName.endsWith('s') || showSimilars)
		) {
			rows.push({
				key: idx,
				groupName: groupName,
				characters: thisKana[groupName].characters
			})
		}
	})

	return rows
}

var groupRows = [
	{ key: 'hiragana', rows: showGroupRows('hiragana', false, false) },
	{ key: 'katakana', rows: showGroupRows('katakana', false, false) }
]
---

<form id="stage0-form" action="">
	<h1 class="mb-4 text-center text-6xl font-bold">
		Welcome to <span class="text-green-500">KanaQuiz</span>
	</h1>
	<p class="mb-8 p-6 text-center">
		Please <strong>choose</strong> the groups of characters that you'd like to be studying.
	</p>

	<!-- Group of Characters -->
	<div class="mb-4 grid grid-cols-1 gap-8 sm:grid-cols-2">
		{ groupRows.map((group) => (
            <div class="relative divide-y-2 divide-gray-200 overflow-hidden rounded-lg border-2 dark:divide-gray-400 dark:border-gray-400">
                <!-- Panel Header -->
                <div class="bg-slate-200 p-3 text-center dark:bg-slate-800">
                    <span class="font-bold" set:html={group.key == 'hiragana'? 'Hiragana · <span class="font-jp">ひらがな' : 'Katakana · <span class="font-jp">カタカナ'}/>
                </div>
    
                <!-- Panel Body -->
                <div class="grid grid-cols-1 gap-1 p-3">
                    {
                        group.rows.map((item) => (
                            <div class="choose-row inline-flex items-center">
                                <label class="cursor-pointer">
                                    <input type="checkbox" class="accent-green-500" name={item.groupName} data-type={group.key} />
                                    <span
                                        class="font-jp text-base"
                                        data-kana={Object.keys(item.characters)
                                            .map((char) => char[0])
                                            .join(' · ')}
                                        data-romaji={Object.keys(item.characters)
                                            .map((char) => item.characters[char][0])
                                            .join(' · ')}
                                    >
                                        {Object.keys(item.characters)
                                            .map((char) => item.characters[char][0])
                                            .join(' · ')}
                                    </span>
                                </label>
                            </div>
                        ))
                    }
                </div>
    
                <!-- Panel Footer -->
                <div class="bg-slate-200 p-3 text-center dark:bg-slate-800">
                    <a
                        href="javascript:;"
                        data-option={group.key}
                        class="footer-options footer-options-all transition-colors hover:text-green-500">All</a
                    >
                    <span>&nbsp;&middot;&nbsp;</span>
                    <a
                        href="javascript:;"
                        data-option={group.key}
                        class="footer-options footer-options-none transition-colors hover:text-green-500">None</a
                    >
                    <span>&nbsp;&middot;&nbsp;</span>
                    <a
                        href="javascript:;"
                        data-option={group.key}
                        class="footer-options transition-colors hover:text-green-500">All alternative</a
                    >
                    <span>&nbsp;&middot;&nbsp;</span>
                    <a
                        href="javascript:;"
                        data-option={group.key}
                        class="footer-options transition-colors hover:text-green-500">No alternative</a
                    >
                </div>
            </div>
		))}
        
	</div>

	<!-- Start the quiz -->
	<div class="p-6 text-center">
		<button
			id="start-button"
			class="rounded-md bg-slate-400 p-2 px-4 hover:scale-105 dark:bg-slate-500 disabled:opacity-75 transition-all"
			disabled
		>
			<span class="text-slate-100">Start the Quiz!</span>
		</button>
	</div>
</form>
<script>
import { check } from "prettier"

	// Hover function on the "choose-row" divs:
	var data_kana_elements = document.querySelectorAll('[data-kana]')
	data_kana_elements.forEach((element) => {
		// On Mouse Over change the text to the kana version
		element.addEventListener('mouseover', () => {
			element.innerHTML = element.getAttribute('data-kana')
		})

		// On Mouse Over change the text to the romaji version
		element.addEventListener('mouseout', () => {
			element.innerHTML = element.getAttribute('data-romaji')
		})
	})

	// Select All Options from one group
	var footer_options_all = document.querySelectorAll('.footer-options-all')
	footer_options_all.forEach((element) => {
		element.addEventListener('click', () => {
			var checkboxes = document.querySelectorAll(
				`input[type="checkbox"][data-type="${element.getAttribute('data-option')}"]`
			)
			checkboxes.forEach((element) => {
				element.checked = true;
				element.dispatchEvent(new Event("change"));
			})
		})
	})

	// De-select All Options from one group
	var footer_options_none = document.querySelectorAll('.footer-options-none')
	footer_options_none.forEach((element) => {
		element.addEventListener('click', () => {
			var checkboxes = document.querySelectorAll(
				`input[type="checkbox"][data-type="${element.getAttribute('data-option')}"]`
			)
			checkboxes.forEach((element) => {
				element.checked = false;
				element.dispatchEvent(new Event("change"));
			})
		})
	})

	// On-change of input values in form, disable or enable start button
	document.querySelectorAll("#stage0-form input").forEach((input) => {
		input.addEventListener("change", (e) => {
			const formData = new FormData(document.querySelector("#stage0-form"));
  			const formProps = Object.keys(Object.fromEntries(formData));
			if(formProps.length > 0) {
				  document.getElementById('start-button').removeAttribute("disabled");
			} else {
				document.getElementById('start-button').setAttribute("disabled", "true");
			}
		})
	})

	import { stage, $stage0 } from '../stores/quiz.js'
	document.querySelector("#stage0-form").addEventListener("submit", (e) => {
		e.preventDefault(); //stop form from submitting
		const formData = new FormData(e.target);
  		const formProps = Object.fromEntries(formData);

		const selectedOptions = Object.keys(formProps);

		stage.set('1')
		$stage0.setKey('selectedOptions', JSON.stringify(selectedOptions));

		window.location.href = 'quiz/1';
	});
</script>
